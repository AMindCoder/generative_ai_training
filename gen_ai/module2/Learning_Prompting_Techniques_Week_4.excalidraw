{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "xCNMmOKIATGGkgLvnhBun",
      "type": "text",
      "x": -15149.571100270412,
      "y": 18288.341236499615,
      "width": 250.1278839111328,
      "height": 210,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJp",
      "roundness": null,
      "seed": 438838157,
      "version": 97,
      "versionNonce": 1827573741,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026893559,
      "link": null,
      "locked": false,
      "text": "Week 4\n\n\nPrompting Tactics\n\n",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Week 4\n\n\nPrompting Tactics\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "rztUzLcS0dkyR1qofKxKD",
      "type": "text",
      "x": -16209.571100270412,
      "y": 18582.091236499615,
      "width": 683.6995849609375,
      "height": 225,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJq",
      "roundness": null,
      "seed": 1725886115,
      "version": 21,
      "versionNonce": 1345101613,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026884680,
      "link": null,
      "locked": false,
      "text": "Prompting Principles\nPrinciple 1: Write clear and specific instructions\nPrinciple 2: Give the model time to “think”\n\n\nPrinciple 1:\nTactics\nTactic 1: Use delimiters to clearly indicate distinct parts of the input\nDelimiters can be anything like: ```, \"\"\", < >, <tag> </tag>",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Prompting Principles\nPrinciple 1: Write clear and specific instructions\nPrinciple 2: Give the model time to “think”\n\n\nPrinciple 1:\nTactics\nTactic 1: Use delimiters to clearly indicate distinct parts of the input\nDelimiters can be anything like: ```, \"\"\", < >, <tag> </tag>",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "jKvWuK7uCbxIrVscD0iIM",
      "type": "text",
      "x": -16203.321100270412,
      "y": 18838.341236499615,
      "width": 552.61962890625,
      "height": 425,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJr",
      "roundness": null,
      "seed": 2133834371,
      "version": 3,
      "versionNonce": 2007971267,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026245147,
      "link": null,
      "locked": false,
      "text": "text = f\"\"\"\nYou should express what you want a model to do by \\ \nproviding instructions that are as clear and \\ \nspecific as you can possibly make them. \\ \nThis will guide the model towards the desired output, \\ \nand reduce the chances of receiving irrelevant \\ \nor incorrect responses. Don't confuse writing a \\ \nclear prompt with writing a short prompt. \\ \nIn many cases, longer prompts provide more clarity \\ \nand context for the model, which can lead to \\ \nmore detailed and relevant outputs.\n\"\"\"\nprompt = f\"\"\"\nSummarize the text delimited by triple backticks \\ \ninto a single sentence.\n```{text}```\n\"\"\"",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "text = f\"\"\"\nYou should express what you want a model to do by \\ \nproviding instructions that are as clear and \\ \nspecific as you can possibly make them. \\ \nThis will guide the model towards the desired output, \\ \nand reduce the chances of receiving irrelevant \\ \nor incorrect responses. Don't confuse writing a \\ \nclear prompt with writing a short prompt. \\ \nIn many cases, longer prompts provide more clarity \\ \nand context for the model, which can lead to \\ \nmore detailed and relevant outputs.\n\"\"\"\nprompt = f\"\"\"\nSummarize the text delimited by triple backticks \\ \ninto a single sentence.\n```{text}```\n\"\"\"",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "QvSH64PgAaU6Aq-fIdVuS",
      "type": "text",
      "x": -16197.071100270412,
      "y": 19345.841236499615,
      "width": 378.3997802734375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJs",
      "roundness": null,
      "seed": 1022765005,
      "version": 3,
      "versionNonce": 209606797,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026280639,
      "link": null,
      "locked": false,
      "text": "Tactic 2: Ask for a structured output",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Tactic 2: Ask for a structured output",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "o8_a2YTrAfr6JTwRFAWqY",
      "type": "text",
      "x": -16190.821100270412,
      "y": 19399.591236499615,
      "width": 529.3596801757812,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJu",
      "roundness": null,
      "seed": 2118208547,
      "version": 3,
      "versionNonce": 2139152227,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026297280,
      "link": null,
      "locked": false,
      "text": "Generate a list of three made-up book titles along \\ \nwith their authors and genres. \nProvide them in JSON format with the following keys: \nbook_id, title, author, genre.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Generate a list of three made-up book titles along \\ \nwith their authors and genres. \nProvide them in JSON format with the following keys: \nbook_id, title, author, genre.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ROq62CBvmmWymIJO3GcYa",
      "type": "text",
      "x": -16187.071100270412,
      "y": 19584.591236499615,
      "width": 650.9995727539062,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJw",
      "roundness": null,
      "seed": 1364958403,
      "version": 3,
      "versionNonce": 293046275,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026310742,
      "link": null,
      "locked": false,
      "text": "Tactic 3: Ask the model to check whether conditions are satisfied",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Tactic 3: Ask the model to check whether conditions are satisfied",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-NZAlbkRkVGF8xwMjiOi1",
      "type": "text",
      "x": -16185.821100270412,
      "y": 19640.841236499615,
      "width": 812.819580078125,
      "height": 575,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJx",
      "roundness": null,
      "seed": 1620198115,
      "version": 3,
      "versionNonce": 26420771,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026475671,
      "link": null,
      "locked": false,
      "text": "text_2 = f\"\"\"\nMaking a simple sandwich is a breeze! Start by taking two slices of bread. \\ \nSpread some butter or mayonnaise on one side of each slice. Then, place \\ \na few slices of your favorite deli meat, like turkey or ham, on one slice of bread. \\ \nAdd some cheese, lettuce, and tomato slices on top. Finally, place the \\ \nsecond slice of bread on top with the buttered side facing down. \\ \nCut the sandwich in half if you like, and enjoy!\n\"\"\"\nprompt = f\"\"\"\nYou will be provided with text delimited by triple quotes. \nIf it contains a sequence of instructions, \\ \nre-write those instructions in the following format:\n\nStep 1 - ...\nStep 2 - …\n…  \nStep N - …\n\nIf the text does not contain a sequence of instructions, \\ \nthen simply write \\\"No steps provided.\\\"\n\n\\\"\\\"\\\"{text_2}\\\"\\\"\\\"\n\"\"\"",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "text_2 = f\"\"\"\nMaking a simple sandwich is a breeze! Start by taking two slices of bread. \\ \nSpread some butter or mayonnaise on one side of each slice. Then, place \\ \na few slices of your favorite deli meat, like turkey or ham, on one slice of bread. \\ \nAdd some cheese, lettuce, and tomato slices on top. Finally, place the \\ \nsecond slice of bread on top with the buttered side facing down. \\ \nCut the sandwich in half if you like, and enjoy!\n\"\"\"\nprompt = f\"\"\"\nYou will be provided with text delimited by triple quotes. \nIf it contains a sequence of instructions, \\ \nre-write those instructions in the following format:\n\nStep 1 - ...\nStep 2 - …\n…  \nStep N - …\n\nIf the text does not contain a sequence of instructions, \\ \nthen simply write \\\"No steps provided.\\\"\n\n\\\"\\\"\\\"{text_2}\\\"\\\"\\\"\n\"\"\"",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "cIuYYrHhpAhiy2RIWW7-B",
      "type": "text",
      "x": -16179.571100270412,
      "y": 20278.341236499615,
      "width": 302.5198059082031,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJy",
      "roundness": null,
      "seed": 1350139043,
      "version": 3,
      "versionNonce": 482799587,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026659317,
      "link": null,
      "locked": false,
      "text": "Tactic 4: \"Few-shot\" prompting",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Tactic 4: \"Few-shot\" prompting",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "HGQHhCEfl8pUSjx4eBNI_",
      "type": "text",
      "x": -16179.571100270412,
      "y": 20347.091236499615,
      "width": 776.1195068359375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bJz",
      "roundness": null,
      "seed": 2090125,
      "version": 92,
      "versionNonce": 402888579,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026693920,
      "link": null,
      "locked": false,
      "text": "Give successful examples to complete the task then ask model to perform task",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Give successful examples to complete the task then ask model to perform task",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ELnxLYGlDvN6jL73mUOU_",
      "type": "text",
      "x": -16177.071100270412,
      "y": 20422.091236499615,
      "width": 568.6395874023438,
      "height": 350,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bK0",
      "roundness": null,
      "seed": 1234076259,
      "version": 5,
      "versionNonce": 1187297507,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026712038,
      "link": null,
      "locked": false,
      "text": "prompt = f\"\"\"\nYour task is to answer in a consistent style.\n\n<child>: Teach me about patience.\n\n<grandparent>: The river that carves the deepest \\ \nvalley flows from a modest spring; the \\ \ngrandest symphony originates from a single note; \\ \nthe most intricate tapestry begins with a solitary thread.\n\n<child>: Teach me about resilience.\n\"\"\"\n\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "prompt = f\"\"\"\nYour task is to answer in a consistent style.\n\n<child>: Teach me about patience.\n\n<grandparent>: The river that carves the deepest \\ \nvalley flows from a modest spring; the \\ \ngrandest symphony originates from a single note; \\ \nthe most intricate tapestry begins with a solitary thread.\n\n<child>: Teach me about resilience.\n\"\"\"\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "D4UAM7JcBkV5zn0tw_9jo",
      "type": "text",
      "x": -15259.571100270412,
      "y": 18578.341236499615,
      "width": 544.4196166992188,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bK1",
      "roundness": null,
      "seed": 1092721421,
      "version": 43,
      "versionNonce": 1258707235,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737026936492,
      "link": null,
      "locked": false,
      "text": "Principle 2: Give the model time to “think”\n\nTactic 1: Specify the steps required to complete a task",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Principle 2: Give the model time to “think”\n\nTactic 1: Specify the steps required to complete a task",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6E8hGDtsbU6ydtxYgFtGi",
      "type": "text",
      "x": -15250.821100270412,
      "y": 18693.341236499615,
      "width": 555.859619140625,
      "height": 650,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bK2",
      "roundness": null,
      "seed": 1626858211,
      "version": 3,
      "versionNonce": 487638563,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737027866939,
      "link": null,
      "locked": false,
      "text": "text = f\"\"\"\nIn a charming village, siblings Jack and Jill set out on \\ \na quest to fetch water from a hilltop \\ \nwell. As they climbed, singing joyfully, misfortune \\ \nstruck—Jack tripped on a stone and tumbled \\ \ndown the hill, with Jill following suit. \\ \nThough slightly battered, the pair returned home to \\ \ncomforting embraces. Despite the mishap, \\ \ntheir adventurous spirits remained undimmed, and they \\ \ncontinued exploring with delight.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions: \n1 - Summarize the following text delimited by triple \\\nbackticks with 1 sentence.\n2 - Translate the summary into French.\n3 - List each name in the French summary.\n4 - Output a json object that contains the following \\\nkeys: french_summary, num_names.\n\nSeparate your answers with line breaks.\n\nText:\n```{text}```\n\"\"\"",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "text = f\"\"\"\nIn a charming village, siblings Jack and Jill set out on \\ \na quest to fetch water from a hilltop \\ \nwell. As they climbed, singing joyfully, misfortune \\ \nstruck—Jack tripped on a stone and tumbled \\ \ndown the hill, with Jill following suit. \\ \nThough slightly battered, the pair returned home to \\ \ncomforting embraces. Despite the mishap, \\ \ntheir adventurous spirits remained undimmed, and they \\ \ncontinued exploring with delight.\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\nPerform the following actions: \n1 - Summarize the following text delimited by triple \\\nbackticks with 1 sentence.\n2 - Translate the summary into French.\n3 - List each name in the French summary.\n4 - Output a json object that contains the following \\\nkeys: french_summary, num_names.\n\nSeparate your answers with line breaks.\n\nText:\n```{text}```\n\"\"\"",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "pzmpRphSw3zIuloO6go0J",
      "type": "text",
      "x": -15248.321100270412,
      "y": 19403.341236499615,
      "width": 495.75970458984375,
      "height": 450,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bK7",
      "roundness": null,
      "seed": 1626191235,
      "version": 13,
      "versionNonce": 1035280301,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737028463527,
      "link": null,
      "locked": false,
      "text": "Ask for output in a specified format\n\n\nYour task is to perform the following actions: \n1 - Summarize the following text delimited by \n  <> with 1 sentence.\n2 - Translate the summary into French.\n3 - List each name in the French summary.\n4 - Output a json object that contains the \n  following keys: french_summary, num_names.\n\nUse the following format:\nSummary: <summary>\nTranslation: <summary translation>\nNames: <list of names in summary>\nOutput JSON: <json with summary and num_names>\n\nText: <{text}>",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Ask for output in a specified format\n\n\nYour task is to perform the following actions: \n1 - Summarize the following text delimited by \n  <> with 1 sentence.\n2 - Translate the summary into French.\n3 - List each name in the French summary.\n4 - Output a json object that contains the \n  following keys: french_summary, num_names.\n\nUse the following format:\nSummary: <summary>\nTranslation: <summary translation>\nNames: <list of names in summary>\nOutput JSON: <json with summary and num_names>\n\nText: <{text}>",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "MIIdSlqgx7EHSVzKg3hI1",
      "type": "text",
      "x": -15242.071100270412,
      "y": 19937.091236499615,
      "width": 776.45947265625,
      "height": 700,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bK8",
      "roundness": null,
      "seed": 26104867,
      "version": 34,
      "versionNonce": 675600579,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737028795808,
      "link": null,
      "locked": false,
      "text": "Tactic 2: \n\nInstruct the model to work out its own solution before rushing to a conclusion\n\nPrompt:\n\nDetermine if the student's solution is correct or not.\n\nQuestion:\nI'm building a solar power installation and I need \\\n help working out the financials. \n- Land costs $100 / square foot\n- I can buy solar panels for $250 / square foot\n- I negotiated a contract for maintenance that will cost \\ \nme a flat $100k per year, and an additional $10 / square \\\nfoot\nWhat is the total cost for the first year of operations \nas a function of the number of square feet.\n\nStudent's Solution:\nLet x be the size of the installation in square feet.\nCosts:\n1. Land cost: 100x\n2. Solar panel cost: 250x\n3. Maintenance cost: 100,000 + 100x\nTotal cost: 100x + 250x + 100,000 + 100x = 450x + 100,000\n\nActual Answer:",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Tactic 2: \n\nInstruct the model to work out its own solution before rushing to a conclusion\n\nPrompt:\n\nDetermine if the student's solution is correct or not.\n\nQuestion:\nI'm building a solar power installation and I need \\\n help working out the financials. \n- Land costs $100 / square foot\n- I can buy solar panels for $250 / square foot\n- I negotiated a contract for maintenance that will cost \\ \nme a flat $100k per year, and an additional $10 / square \\\nfoot\nWhat is the total cost for the first year of operations \nas a function of the number of square feet.\n\nStudent's Solution:\nLet x be the size of the installation in square feet.\nCosts:\n1. Land cost: 100x\n2. Solar panel cost: 250x\n3. Maintenance cost: 100,000 + 100x\nTotal cost: 100x + 250x + 100,000 + 100x = 450x + 100,000\n\nActual Answer:",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ANpWwJLLeMW3N99mtz-1a",
      "type": "text",
      "x": -15230.821100270412,
      "y": 20725.841236499615,
      "width": 743.7996826171875,
      "height": 1400,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bK9",
      "roundness": null,
      "seed": 806374307,
      "version": 21,
      "versionNonce": 719174691,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737028807743,
      "link": null,
      "locked": false,
      "text": "Improved Prompt:\n\nYour task is to determine if the student's solution \\\nis correct or not.\nTo solve the problem do the following:\n- First, work out your own solution to the problem including the final total. \n- Then compare your solution to the student's solution \\ \nand evaluate if the student's solution is correct or not. \nDon't decide if the student's solution is correct until \nyou have done the problem yourself.\n\nUse the following format:\nQuestion:\n```\nquestion here\n```\nStudent's solution:\n```\nstudent's solution here\n```\nActual solution:\n```\nsteps to work out the solution and your solution here\n```\nIs the student's solution the same as actual solution \\\njust calculated:\n```\nyes or no\n```\nStudent grade:\n```\ncorrect or incorrect\n```\n\nQuestion:\n```\nI'm building a solar power installation and I need help \\\nworking out the financials. \n- Land costs $100 / square foot\n- I can buy solar panels for $250 / square foot\n- I negotiated a contract for maintenance that will cost \\\nme a flat $100k per year, and an additional $10 / square \\\nfoot\nWhat is the total cost for the first year of operations \\\nas a function of the number of square feet.\n``` \nStudent's solution:\n```\nLet x be the size of the installation in square feet.\nCosts:\n1. Land cost: 100x\n2. Solar panel cost: 250x\n3. Maintenance cost: 100,000 + 100x\nTotal cost: 100x + 250x + 100,000 + 100x = 450x + 100,000\n```\nActual solution:",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Improved Prompt:\n\nYour task is to determine if the student's solution \\\nis correct or not.\nTo solve the problem do the following:\n- First, work out your own solution to the problem including the final total. \n- Then compare your solution to the student's solution \\ \nand evaluate if the student's solution is correct or not. \nDon't decide if the student's solution is correct until \nyou have done the problem yourself.\n\nUse the following format:\nQuestion:\n```\nquestion here\n```\nStudent's solution:\n```\nstudent's solution here\n```\nActual solution:\n```\nsteps to work out the solution and your solution here\n```\nIs the student's solution the same as actual solution \\\njust calculated:\n```\nyes or no\n```\nStudent grade:\n```\ncorrect or incorrect\n```\n\nQuestion:\n```\nI'm building a solar power installation and I need help \\\nworking out the financials. \n- Land costs $100 / square foot\n- I can buy solar panels for $250 / square foot\n- I negotiated a contract for maintenance that will cost \\\nme a flat $100k per year, and an additional $10 / square \\\nfoot\nWhat is the total cost for the first year of operations \\\nas a function of the number of square feet.\n``` \nStudent's solution:\n```\nLet x be the size of the installation in square feet.\nCosts:\n1. Land cost: 100x\n2. Solar panel cost: 250x\n3. Maintenance cost: 100,000 + 100x\nTotal cost: 100x + 250x + 100,000 + 100x = 450x + 100,000\n```\nActual solution:",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "xGSYS6W9E_LspR6cOTC6v",
      "type": "text",
      "x": -14390.821100270412,
      "y": 18575.841236499615,
      "width": 1202.51904296875,
      "height": 200,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bKA",
      "roundness": null,
      "seed": 928248685,
      "version": 247,
      "versionNonce": 392665005,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737071336653,
      "link": null,
      "locked": false,
      "text": "Exercise :\n\n\nGiven the earnings report of TCS for Q3 2025, write a  prompt which will summarise the meeting and extract particiapnts.\n\nSHow how will you write an effective prompt\n\n- Consider inferring concept of prompting technique",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Exercise :\n\n\nGiven the earnings report of TCS for Q3 2025, write a  prompt which will summarise the meeting and extract particiapnts.\n\nSHow how will you write an effective prompt\n\n- Consider inferring concept of prompting technique",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "LJryVahVGDRqMVvvztA06",
      "type": "text",
      "x": -12779.571100270412,
      "y": 18620.841236499615,
      "width": 3639.93701171875,
      "height": 850,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bKB",
      "roundness": null,
      "seed": 1250679085,
      "version": 144,
      "versionNonce": 72963922,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1743921342180,
      "link": null,
      "locked": false,
      "text": "Exercise :\n\nWrite a prompt which wil prevent hallucination by model. Why it is imprtant to do it?\n\n\nText:\nREDMOND, Wash. — January 24, 2023 — Microsoft Corp. today announced the following results for the quarter ended December 31, 2022, as compared to the corresponding period of last fiscal year:\n\n·        Revenue was $52.7 billion and increased 2%\n\n·        Operating income was $20.4 billion GAAP and $21.6 billion non-GAAP, and decreased 8% and 3%, respectively\n\n·        Net income was $16.4 billion GAAP and $17.4 billion non-GAAP, and decreased 12% and 7%, respectively\n\n·        Diluted earnings per share was $2.20 GAAP and $2.32 non-GAAP, and decreased 11% and 6%, respectively\n\n“The next major wave of computing is being born, as the Microsoft Cloud turns the world’s most advanced AI models into a new computing platform,” said Satya Nadella, chairman and chief executive officer of Microsoft. “We are committed to helping our customers use our platforms and tools to do more with less today and innovate for the future in the new era of AI.”\n\n\n\n“We are focused on operational excellence as we continue to invest to drive growth. Microsoft Cloud revenue was $27.1 billion, up 22% (up 29% in constant currency) year-over-year as our commercial offerings continue to drive value for our customers,” said Amy Hood, executive vice president and chief financial officer of Microsoft.\n\nquestion: ​\nHow many employees does microsoft have?\n\nprogram: ​\n- what facts do you need to look for in the text to answer the question?​\n- does the text contain all the facts needed to answer the question? ​\n- think about how you might answer the question given what you know. If you don't have enough facts answer I'm not sure.​\n- answer the question and begin your answer with RESPONSE.​\n\nState each step of the program and show your work for performing that step. \n\n1: what facts do you need to look for in the text to answer the question?",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Exercise :\n\nWrite a prompt which wil prevent hallucination by model. Why it is imprtant to do it?\n\n\nText:\nREDMOND, Wash. — January 24, 2023 — Microsoft Corp. today announced the following results for the quarter ended December 31, 2022, as compared to the corresponding period of last fiscal year:\n\n·        Revenue was $52.7 billion and increased 2%\n\n·        Operating income was $20.4 billion GAAP and $21.6 billion non-GAAP, and decreased 8% and 3%, respectively\n\n·        Net income was $16.4 billion GAAP and $17.4 billion non-GAAP, and decreased 12% and 7%, respectively\n\n·        Diluted earnings per share was $2.20 GAAP and $2.32 non-GAAP, and decreased 11% and 6%, respectively\n\n“The next major wave of computing is being born, as the Microsoft Cloud turns the world’s most advanced AI models into a new computing platform,” said Satya Nadella, chairman and chief executive officer of Microsoft. “We are committed to helping our customers use our platforms and tools to do more with less today and innovate for the future in the new era of AI.”\n\n\n\n“We are focused on operational excellence as we continue to invest to drive growth. Microsoft Cloud revenue was $27.1 billion, up 22% (up 29% in constant currency) year-over-year as our commercial offerings continue to drive value for our customers,” said Amy Hood, executive vice president and chief financial officer of Microsoft.\n\nquestion: ​\nHow many employees does microsoft have?\n\nprogram: ​\n- what facts do you need to look for in the text to answer the question?​\n- does the text contain all the facts needed to answer the question? ​\n- think about how you might answer the question given what you know. If you don't have enough facts answer I'm not sure.​\n- answer the question and begin your answer with RESPONSE.​\n\nState each step of the program and show your work for performing that step. \n\n1: what facts do you need to look for in the text to answer the question?",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "b0sieIorRt-uYs0QRebKj",
      "type": "text",
      "x": -14383.321100270412,
      "y": 18850.841236499615,
      "width": 1373.859130859375,
      "height": 175,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bKC",
      "roundness": null,
      "seed": 1019975053,
      "version": 32,
      "versionNonce": 561614637,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737122113981,
      "link": null,
      "locked": false,
      "text": "Here is the summary Prompt:\n\n- Summarize the financial performance, including revenue growth (INR/USD), margins, TCV, free cash flow, and dividend details.  \n- Highlight segmental performance across industries (e.g., BFSI, Life Sciences) and geographies (e.g., North America, UK, India).  \n- Extract updates on key initiatives and innovations, including flagship platforms (e.g., TCS BaNCS, ignio™) and notable project successes.  \n- Provide workforce insights, such as headcount, diversity, attrition rates, promotions, and training initiatives.  \n- Outline market trends, demand levers, technology adoption (AI/GenAI/cloud), challenges, and management’s forward-looking statements.  ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Here is the summary Prompt:\n\n- Summarize the financial performance, including revenue growth (INR/USD), margins, TCV, free cash flow, and dividend details.  \n- Highlight segmental performance across industries (e.g., BFSI, Life Sciences) and geographies (e.g., North America, UK, India).  \n- Extract updates on key initiatives and innovations, including flagship platforms (e.g., TCS BaNCS, ignio™) and notable project successes.  \n- Provide workforce insights, such as headcount, diversity, attrition rates, promotions, and training initiatives.  \n- Outline market trends, demand levers, technology adoption (AI/GenAI/cloud), challenges, and management’s forward-looking statements.  ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "v6euZ8lYvXjUXY-8_QHBl",
      "type": "text",
      "x": -14380.821100270412,
      "y": 19085.841236499615,
      "width": 1569.3790283203125,
      "height": 200,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "bKD",
      "roundness": null,
      "seed": 371593389,
      "version": 5,
      "versionNonce": 725448397,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737122217393,
      "link": null,
      "locked": false,
      "text": "Extract participants' details from the document in JSON format, including their name, title, role, and company. Ensure to structure the data clearly, for example:\n{\n  \"name\": \"John Doe\",\n  \"title\": \"Chief Executive Officer\",\n  \"role\": \"Speaker\",\n  \"company\": \"Tata Consultancy Services\"\n}\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Extract participants' details from the document in JSON format, including their name, title, role, and company. Ensure to structure the data clearly, for example:\n{\n  \"name\": \"John Doe\",\n  \"title\": \"Chief Executive Officer\",\n  \"role\": \"Speaker\",\n  \"company\": \"Tata Consultancy Services\"\n}\n",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}